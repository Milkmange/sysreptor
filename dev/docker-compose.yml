name: sysreptor-dev

services:
  db:
    image: 'postgres:14'
    environment:
      POSTGRES_USER: reportcreator
      POSTGRES_PASSWORD: reportcreator
      POSTGRES_DB: reportcreator
      PGDATA: /data
    volumes:
      - type: volume
        source: db-data
        target: /data
    expose:
      - 5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reportcreator"]
      interval: 2s
      timeout: 5s
      retries: 30
    stop_grace_period: 120s
  redis:
    image: redis:8.0-alpine
    command: sh -c "exec redis-server --requirepass $${REDIS_PASSWORD:-}"
    environment:
      REDIS_PASSWORD: reportcreator
    expose:
      - 6379
  integration-tests:
    profiles: [test]
    image: mcr.microsoft.com/playwright:v1.54.1-noble
    working_dir: /app/packages/frontend/
    environment:
      # DISPLAY: :0 # for running with --ui in WSL 2 with XServer
      FRONTEND_ADMIN_USER: "reptor"
    env_file: ../deploy/app.env
    volumes:
      - type: bind
        source: ../packages/
        target: /app/packages/
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/.X11-unix:/tmp/.X11-unix
    command: npx playwright test # --ui
    # depends_on:
    #   frontend:
    #     condition: service_healthy
    #   api:
    #     condition: service_healthy
  # rabbitmq:
  #   image: rabbitmq:4
  #   hostname: rabbitmq
  #   environment:
  #     RABBITMQ_DEFAULT_USER: reportcreator
  #     RABBITMQ_DEFAULT_PASS: reportcreator
  #   volumes:
  #     - type: volume
  #       source: mq-data
  #       target: /var/lib/rabbitmq
  #   expose:
  #     - 5672
  #   healthcheck:
  #     test: ["CMD-SHELL", "rabbitmq-diagnostics check_port_connectivity"]
  #     interval: 2s
  #     timeout: 5s
  #     retries: 30
  # rendering-worker:
  #   build:
  #     context: ..
  #     target: api-dev
  #   user: "1000"
  #   command: watchmedo auto-restart --directory=./ --pattern=*.py --recursive -- celery --app=sysreptor.conf.celery --quiet worker -Q rendering --without-heartbeat --without-gossip --without-mingle 
  #   environment:
  #     PDF_RENDER_SCRIPT_PATH: /app/packages/rendering/dist/bundle.js
  #     CELERY_BROKER_URL: amqp://reportcreator:reportcreator@rabbitmq:5672/
  #     CELERY_RESULT_BACKEND: sysreptor.utils.celery_worker:CustomRPCBackend://reportcreator:reportcreator@rabbitmq:5672/
  #     CELERY_SECURE_WORKER: "on"
  #   volumes:
  #     - type: bind
  #       source: ../api/
  #       target: /app/api/
  #     - type: bind
  #       source: ../packages/rendering/dist
  #       target: /app/packages/rendering/dist/
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     rendering-builder:
  #       condition: service_started
  frontend-setup:
    build:
      context: ..
      target: frontend-dev
    command: npm install
    restart: "no"
    volumes:
      - type: bind
        source: ../packages/
        target: /app/packages/
  pdfviewer-builder:
    build: 
      context: ..
      target: frontend-dev
    command: npm run --workspace=pdfviewer build-watch
    init: true
    volumes:
      - type: bind
        source: ../packages/
        target: /app/packages/
    depends_on:
      frontend-setup:
        condition: service_completed_successfully
  rendering-builder:
    build: 
      context: ..
      target: frontend-dev
    command: npm run --workspace=rendering build-watch
    volumes:
      - type: bind
        source: ../packages/
        target: /app/packages/
    depends_on:
      frontend-setup:
        condition: service_completed_successfully
  plugin-builder:
    build:
      context: ..
      target: plugin-builder-dev
    command: /app/plugins/build.sh dev
    init: true
    volumes:
      - type: bind
        source: ../plugins/
        target: /app/plugins/
      - type: bind
        source: ../packages/
        target: /app/packages/
    depends_on:
      frontend-setup:
        condition: service_completed_successfully
  languagetool:
    build: 
      context: ../languagetool
    init: true
    environment:
      languagetool_dbHost: db
      languagetool_dbName: reportcreator
      languagetool_dbUsername: reportcreator
      languagetool_dbPassword: reportcreator
    expose:
      - 8010
    healthcheck:
      test: ["CMD", "curl", "-f", "-so", "/dev/null", "http://localhost:8010/v2/languages"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 10s
    depends_on:
      db: 
        condition: service_healthy
  api:
    build:
      context: ..
      target: api-dev
    command: sh -c "python3 manage.py migrate && python3 -Xfrozen_modules=off -m debugpy --listen 0.0.0.0:5678 -m uvicorn --reload --reload-include '*.html' --host 0.0.0.0 --port 8000 sysreptor.conf.asgi:application"
    init: true
    volumes:
      - type: volume
        source: app-data
        target: /data
      - type: bind
        source: ../api/
        target: /app/api/
      - type: bind
        source: ../packages/rendering
        target: /app/packages/rendering
      - type: bind
        source: ../plugins
        target: /app/plugins/
    expose:
      - 8000
    ports:
      - "127.0.0.1:8000:8000"
      - "127.0.0.1:5678:5678"
    environment:
      DEBUG: "on"
      DATABASE_HOST: db
      DATABASE_NAME: reportcreator
      DATABASE_USER: reportcreator
      DATABASE_PASSWORD: reportcreator
      SPELLCHECK_URL: http://languagetool:8010/
      REDIS_URL: redis://:reportcreator@redis:6379/0
      # CELERY_BROKER_URL: amqp://reportcreator:reportcreator@rabbitmq:5672/
      # CELERY_RESULT_BACKEND: sysreptor.utils.celery_worker:CustomRPCBackend://reportcreator:reportcreator@rabbitmq:5672/
    env_file: ../deploy/app.env
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "-so", "/dev/null", "http://localhost:8000/api/public/utils/healthcheck/"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 10s
    depends_on:
      db:
        condition: service_healthy
      languagetool:
        condition: service_started
      redis:
        condition: service_started
      # rendering-worker:
      #   condition: service_started
    # cpu_count: 2
    # cpuset: 0,1
    # mem_limit: 4g
  frontend:
    build: 
      context: ..
      target: frontend-dev
    command: npm run --workspace=frontend dev
    # healthcheck: 
    #   test: ["CMD", "sh", "-c", "curl -s http://localhost:3000/ | grep __nuxt && exit 0 || exit 1"]
    #   interval: 30s
    #   timeout: 30s
    #   retries: 5
    #   start_period: 10s
    volumes:
      - type: bind
        source: ../packages/
        target: /app/packages/
      - type: bind
        source: ../packages/pdfviewer/
        target: /app/packages/nuxt-base-layer/src/public/static/pdfviewer/
      - type: bind
        source: ../api/src/sysreptor/pentests/rendering/global_assets/
        target: /app/packages/frontend/src/assets/rendering/
    tmpfs:
      - /tmp
    expose:
      - 3000
      - 24678
    ports:
      - "127.0.0.1:3000:3000"
      - "127.0.0.1:24678:24678"
    environment:
      HOST: 0.0.0.0
    depends_on:
      api:
        condition: service_started
      pdfviewer-builder:
        condition: service_started
      frontend-setup:
        condition: service_completed_successfully
      
    


volumes:
  db-data:
    name: sysreptor-db-data
  mq-data:
    name: sysreptor-mq-data
  app-data:
    name: sysreptor-app-data

